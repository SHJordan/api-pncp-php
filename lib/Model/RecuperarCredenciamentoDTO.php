<?php
/**
 * RecuperarCredenciamentoDTO
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * API PNCP
 *
 * API REST de serviços do Portal Nacional de Contratações Públicas (PNCP)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: css.serpro@serpro.gov.br
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.1.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * RecuperarCredenciamentoDTO Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class RecuperarCredenciamentoDTO implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'RecuperarCredenciamentoDTO';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'usuario_deferimento' => 'string',
        'usuario_analise_processo' => 'string',
        'status' => 'string',
        'cnpj' => 'string',
        'data_inclusao' => '\DateTime',
        'ano_credenciamento' => 'int',
        'sequencial_credenciamento' => 'int',
        'excluido' => 'bool',
        'contrato' => 'bool',
        'nome_razao_social' => 'string',
        'ata' => 'bool',
        'email' => 'string',
        'responsavel_cadastro_email' => 'string',
        'nome_sistema' => 'string',
        'justificativa_analise' => 'string',
        'data_deferimento' => '\DateTime',
        'usuario_treinamento_id' => 'int',
        'data_analise_processo' => '\DateTime',
        'login_treinamento' => 'string',
        'justificativa_deferimento' => 'string',
        'termos_declaracao_aceite' => 'bool',
        'url_sistema' => 'string',
        'responsavel_cadastro_nome' => 'string',
        'responsavel_cadastro_cpf' => 'string',
        'responsavel_cadastro_telefone' => 'string',
        'esfera_federal' => 'bool',
        'ufs' => 'string[]',
        'esfera_estadual' => 'bool',
        'esfera_municipal' => 'bool',
        'edital_credenciamento' => 'bool',
        'urledital_credenciamento' => 'string',
        'aviso_contratacao_direta' => 'bool',
        'url_aviso_contratacao_direta' => 'string',
        'edital_licitacao' => 'bool',
        'url_edital_licitacao' => 'string',
        'url_ata' => 'string',
        'url_contrato' => 'string',
        'esfera_distrital' => 'bool',
        'disponibiliza_artefato_licitacao' => 'bool',
        'usuario_credenciado' => '\OpenAPI\Client\Model\RecuperarCredenciamentoUsuarioDTO'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'usuario_deferimento' => null,
        'usuario_analise_processo' => null,
        'status' => null,
        'cnpj' => null,
        'data_inclusao' => 'date-time',
        'ano_credenciamento' => 'int32',
        'sequencial_credenciamento' => 'int32',
        'excluido' => null,
        'contrato' => null,
        'nome_razao_social' => null,
        'ata' => null,
        'email' => null,
        'responsavel_cadastro_email' => null,
        'nome_sistema' => null,
        'justificativa_analise' => null,
        'data_deferimento' => 'date-time',
        'usuario_treinamento_id' => 'int64',
        'data_analise_processo' => 'date-time',
        'login_treinamento' => null,
        'justificativa_deferimento' => null,
        'termos_declaracao_aceite' => null,
        'url_sistema' => null,
        'responsavel_cadastro_nome' => null,
        'responsavel_cadastro_cpf' => null,
        'responsavel_cadastro_telefone' => null,
        'esfera_federal' => null,
        'ufs' => null,
        'esfera_estadual' => null,
        'esfera_municipal' => null,
        'edital_credenciamento' => null,
        'urledital_credenciamento' => null,
        'aviso_contratacao_direta' => null,
        'url_aviso_contratacao_direta' => null,
        'edital_licitacao' => null,
        'url_edital_licitacao' => null,
        'url_ata' => null,
        'url_contrato' => null,
        'esfera_distrital' => null,
        'disponibiliza_artefato_licitacao' => null,
        'usuario_credenciado' => null
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var boolean[]
      */
    protected static array $openAPINullables = [
        'usuario_deferimento' => false,
		'usuario_analise_processo' => false,
		'status' => false,
		'cnpj' => false,
		'data_inclusao' => false,
		'ano_credenciamento' => false,
		'sequencial_credenciamento' => false,
		'excluido' => false,
		'contrato' => false,
		'nome_razao_social' => false,
		'ata' => false,
		'email' => false,
		'responsavel_cadastro_email' => false,
		'nome_sistema' => false,
		'justificativa_analise' => false,
		'data_deferimento' => false,
		'usuario_treinamento_id' => false,
		'data_analise_processo' => false,
		'login_treinamento' => false,
		'justificativa_deferimento' => false,
		'termos_declaracao_aceite' => false,
		'url_sistema' => false,
		'responsavel_cadastro_nome' => false,
		'responsavel_cadastro_cpf' => false,
		'responsavel_cadastro_telefone' => false,
		'esfera_federal' => false,
		'ufs' => false,
		'esfera_estadual' => false,
		'esfera_municipal' => false,
		'edital_credenciamento' => false,
		'urledital_credenciamento' => false,
		'aviso_contratacao_direta' => false,
		'url_aviso_contratacao_direta' => false,
		'edital_licitacao' => false,
		'url_edital_licitacao' => false,
		'url_ata' => false,
		'url_contrato' => false,
		'esfera_distrital' => false,
		'disponibiliza_artefato_licitacao' => false,
		'usuario_credenciado' => false
    ];

    /**
      * If a nullable field gets set to null, insert it here
      *
      * @var boolean[]
      */
    protected array $openAPINullablesSetToNull = [];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of nullable properties
     *
     * @return array
     */
    protected static function openAPINullables(): array
    {
        return self::$openAPINullables;
    }

    /**
     * Array of nullable field names deliberately set to null
     *
     * @return boolean[]
     */
    private function getOpenAPINullablesSetToNull(): array
    {
        return $this->openAPINullablesSetToNull;
    }

    /**
     * Setter - Array of nullable field names deliberately set to null
     *
     * @param boolean[] $openAPINullablesSetToNull
     */
    private function setOpenAPINullablesSetToNull(array $openAPINullablesSetToNull): void
    {
        $this->openAPINullablesSetToNull = $openAPINullablesSetToNull;
    }

    /**
     * Checks if a property is nullable
     *
     * @param string $property
     * @return bool
     */
    public static function isNullable(string $property): bool
    {
        return self::openAPINullables()[$property] ?? false;
    }

    /**
     * Checks if a nullable property is set to null.
     *
     * @param string $property
     * @return bool
     */
    public function isNullableSetToNull(string $property): bool
    {
        return in_array($property, $this->getOpenAPINullablesSetToNull(), true);
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'usuario_deferimento' => 'usuarioDeferimento',
        'usuario_analise_processo' => 'usuarioAnaliseProcesso',
        'status' => 'status',
        'cnpj' => 'cnpj',
        'data_inclusao' => 'dataInclusao',
        'ano_credenciamento' => 'anoCredenciamento',
        'sequencial_credenciamento' => 'sequencialCredenciamento',
        'excluido' => 'excluido',
        'contrato' => 'contrato',
        'nome_razao_social' => 'nomeRazaoSocial',
        'ata' => 'ata',
        'email' => 'email',
        'responsavel_cadastro_email' => 'responsavelCadastroEmail',
        'nome_sistema' => 'nomeSistema',
        'justificativa_analise' => 'justificativaAnalise',
        'data_deferimento' => 'dataDeferimento',
        'usuario_treinamento_id' => 'usuarioTreinamentoId',
        'data_analise_processo' => 'dataAnaliseProcesso',
        'login_treinamento' => 'loginTreinamento',
        'justificativa_deferimento' => 'justificativaDeferimento',
        'termos_declaracao_aceite' => 'termosDeclaracaoAceite',
        'url_sistema' => 'urlSistema',
        'responsavel_cadastro_nome' => 'responsavelCadastroNome',
        'responsavel_cadastro_cpf' => 'responsavelCadastroCpf',
        'responsavel_cadastro_telefone' => 'responsavelCadastroTelefone',
        'esfera_federal' => 'esferaFederal',
        'ufs' => 'ufs',
        'esfera_estadual' => 'esferaEstadual',
        'esfera_municipal' => 'esferaMunicipal',
        'edital_credenciamento' => 'editalCredenciamento',
        'urledital_credenciamento' => 'urleditalCredenciamento',
        'aviso_contratacao_direta' => 'avisoContratacaoDireta',
        'url_aviso_contratacao_direta' => 'urlAvisoContratacaoDireta',
        'edital_licitacao' => 'editalLicitacao',
        'url_edital_licitacao' => 'urlEditalLicitacao',
        'url_ata' => 'urlAta',
        'url_contrato' => 'urlContrato',
        'esfera_distrital' => 'esferaDistrital',
        'disponibiliza_artefato_licitacao' => 'disponibilizaArtefatoLicitacao',
        'usuario_credenciado' => 'usuarioCredenciado'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'usuario_deferimento' => 'setUsuarioDeferimento',
        'usuario_analise_processo' => 'setUsuarioAnaliseProcesso',
        'status' => 'setStatus',
        'cnpj' => 'setCnpj',
        'data_inclusao' => 'setDataInclusao',
        'ano_credenciamento' => 'setAnoCredenciamento',
        'sequencial_credenciamento' => 'setSequencialCredenciamento',
        'excluido' => 'setExcluido',
        'contrato' => 'setContrato',
        'nome_razao_social' => 'setNomeRazaoSocial',
        'ata' => 'setAta',
        'email' => 'setEmail',
        'responsavel_cadastro_email' => 'setResponsavelCadastroEmail',
        'nome_sistema' => 'setNomeSistema',
        'justificativa_analise' => 'setJustificativaAnalise',
        'data_deferimento' => 'setDataDeferimento',
        'usuario_treinamento_id' => 'setUsuarioTreinamentoId',
        'data_analise_processo' => 'setDataAnaliseProcesso',
        'login_treinamento' => 'setLoginTreinamento',
        'justificativa_deferimento' => 'setJustificativaDeferimento',
        'termos_declaracao_aceite' => 'setTermosDeclaracaoAceite',
        'url_sistema' => 'setUrlSistema',
        'responsavel_cadastro_nome' => 'setResponsavelCadastroNome',
        'responsavel_cadastro_cpf' => 'setResponsavelCadastroCpf',
        'responsavel_cadastro_telefone' => 'setResponsavelCadastroTelefone',
        'esfera_federal' => 'setEsferaFederal',
        'ufs' => 'setUfs',
        'esfera_estadual' => 'setEsferaEstadual',
        'esfera_municipal' => 'setEsferaMunicipal',
        'edital_credenciamento' => 'setEditalCredenciamento',
        'urledital_credenciamento' => 'setUrleditalCredenciamento',
        'aviso_contratacao_direta' => 'setAvisoContratacaoDireta',
        'url_aviso_contratacao_direta' => 'setUrlAvisoContratacaoDireta',
        'edital_licitacao' => 'setEditalLicitacao',
        'url_edital_licitacao' => 'setUrlEditalLicitacao',
        'url_ata' => 'setUrlAta',
        'url_contrato' => 'setUrlContrato',
        'esfera_distrital' => 'setEsferaDistrital',
        'disponibiliza_artefato_licitacao' => 'setDisponibilizaArtefatoLicitacao',
        'usuario_credenciado' => 'setUsuarioCredenciado'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'usuario_deferimento' => 'getUsuarioDeferimento',
        'usuario_analise_processo' => 'getUsuarioAnaliseProcesso',
        'status' => 'getStatus',
        'cnpj' => 'getCnpj',
        'data_inclusao' => 'getDataInclusao',
        'ano_credenciamento' => 'getAnoCredenciamento',
        'sequencial_credenciamento' => 'getSequencialCredenciamento',
        'excluido' => 'getExcluido',
        'contrato' => 'getContrato',
        'nome_razao_social' => 'getNomeRazaoSocial',
        'ata' => 'getAta',
        'email' => 'getEmail',
        'responsavel_cadastro_email' => 'getResponsavelCadastroEmail',
        'nome_sistema' => 'getNomeSistema',
        'justificativa_analise' => 'getJustificativaAnalise',
        'data_deferimento' => 'getDataDeferimento',
        'usuario_treinamento_id' => 'getUsuarioTreinamentoId',
        'data_analise_processo' => 'getDataAnaliseProcesso',
        'login_treinamento' => 'getLoginTreinamento',
        'justificativa_deferimento' => 'getJustificativaDeferimento',
        'termos_declaracao_aceite' => 'getTermosDeclaracaoAceite',
        'url_sistema' => 'getUrlSistema',
        'responsavel_cadastro_nome' => 'getResponsavelCadastroNome',
        'responsavel_cadastro_cpf' => 'getResponsavelCadastroCpf',
        'responsavel_cadastro_telefone' => 'getResponsavelCadastroTelefone',
        'esfera_federal' => 'getEsferaFederal',
        'ufs' => 'getUfs',
        'esfera_estadual' => 'getEsferaEstadual',
        'esfera_municipal' => 'getEsferaMunicipal',
        'edital_credenciamento' => 'getEditalCredenciamento',
        'urledital_credenciamento' => 'getUrleditalCredenciamento',
        'aviso_contratacao_direta' => 'getAvisoContratacaoDireta',
        'url_aviso_contratacao_direta' => 'getUrlAvisoContratacaoDireta',
        'edital_licitacao' => 'getEditalLicitacao',
        'url_edital_licitacao' => 'getUrlEditalLicitacao',
        'url_ata' => 'getUrlAta',
        'url_contrato' => 'getUrlContrato',
        'esfera_distrital' => 'getEsferaDistrital',
        'disponibiliza_artefato_licitacao' => 'getDisponibilizaArtefatoLicitacao',
        'usuario_credenciado' => 'getUsuarioCredenciado'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    public const STATUS_PENDENTE = 'pendente';
    public const STATUS_DEFERIDO = 'deferido';
    public const STATUS_INDEFERIDO = 'indeferido';

    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getStatusAllowableValues()
    {
        return [
            self::STATUS_PENDENTE,
            self::STATUS_DEFERIDO,
            self::STATUS_INDEFERIDO,
        ];
    }

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->setIfExists('usuario_deferimento', $data ?? [], null);
        $this->setIfExists('usuario_analise_processo', $data ?? [], null);
        $this->setIfExists('status', $data ?? [], null);
        $this->setIfExists('cnpj', $data ?? [], null);
        $this->setIfExists('data_inclusao', $data ?? [], null);
        $this->setIfExists('ano_credenciamento', $data ?? [], null);
        $this->setIfExists('sequencial_credenciamento', $data ?? [], null);
        $this->setIfExists('excluido', $data ?? [], null);
        $this->setIfExists('contrato', $data ?? [], null);
        $this->setIfExists('nome_razao_social', $data ?? [], null);
        $this->setIfExists('ata', $data ?? [], null);
        $this->setIfExists('email', $data ?? [], null);
        $this->setIfExists('responsavel_cadastro_email', $data ?? [], null);
        $this->setIfExists('nome_sistema', $data ?? [], null);
        $this->setIfExists('justificativa_analise', $data ?? [], null);
        $this->setIfExists('data_deferimento', $data ?? [], null);
        $this->setIfExists('usuario_treinamento_id', $data ?? [], null);
        $this->setIfExists('data_analise_processo', $data ?? [], null);
        $this->setIfExists('login_treinamento', $data ?? [], null);
        $this->setIfExists('justificativa_deferimento', $data ?? [], null);
        $this->setIfExists('termos_declaracao_aceite', $data ?? [], null);
        $this->setIfExists('url_sistema', $data ?? [], null);
        $this->setIfExists('responsavel_cadastro_nome', $data ?? [], null);
        $this->setIfExists('responsavel_cadastro_cpf', $data ?? [], null);
        $this->setIfExists('responsavel_cadastro_telefone', $data ?? [], null);
        $this->setIfExists('esfera_federal', $data ?? [], null);
        $this->setIfExists('ufs', $data ?? [], null);
        $this->setIfExists('esfera_estadual', $data ?? [], null);
        $this->setIfExists('esfera_municipal', $data ?? [], null);
        $this->setIfExists('edital_credenciamento', $data ?? [], null);
        $this->setIfExists('urledital_credenciamento', $data ?? [], null);
        $this->setIfExists('aviso_contratacao_direta', $data ?? [], null);
        $this->setIfExists('url_aviso_contratacao_direta', $data ?? [], null);
        $this->setIfExists('edital_licitacao', $data ?? [], null);
        $this->setIfExists('url_edital_licitacao', $data ?? [], null);
        $this->setIfExists('url_ata', $data ?? [], null);
        $this->setIfExists('url_contrato', $data ?? [], null);
        $this->setIfExists('esfera_distrital', $data ?? [], null);
        $this->setIfExists('disponibiliza_artefato_licitacao', $data ?? [], null);
        $this->setIfExists('usuario_credenciado', $data ?? [], null);
    }

    /**
    * Sets $this->container[$variableName] to the given data or to the given default Value; if $variableName
    * is nullable and its value is set to null in the $fields array, then mark it as "set to null" in the
    * $this->openAPINullablesSetToNull array
    *
    * @param string $variableName
    * @param array  $fields
    * @param mixed  $defaultValue
    */
    private function setIfExists(string $variableName, array $fields, $defaultValue): void
    {
        if (self::isNullable($variableName) && array_key_exists($variableName, $fields) && is_null($fields[$variableName])) {
            $this->openAPINullablesSetToNull[] = $variableName;
        }

        $this->container[$variableName] = $fields[$variableName] ?? $defaultValue;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        $allowedValues = $this->getStatusAllowableValues();
        if (!is_null($this->container['status']) && !in_array($this->container['status'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value '%s' for 'status', must be one of '%s'",
                $this->container['status'],
                implode("', '", $allowedValues)
            );
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets usuario_deferimento
     *
     * @return string|null
     */
    public function getUsuarioDeferimento()
    {
        return $this->container['usuario_deferimento'];
    }

    /**
     * Sets usuario_deferimento
     *
     * @param string|null $usuario_deferimento usuario_deferimento
     *
     * @return self
     */
    public function setUsuarioDeferimento($usuario_deferimento)
    {
        if (is_null($usuario_deferimento)) {
            throw new \InvalidArgumentException('non-nullable usuario_deferimento cannot be null');
        }
        $this->container['usuario_deferimento'] = $usuario_deferimento;

        return $this;
    }

    /**
     * Gets usuario_analise_processo
     *
     * @return string|null
     */
    public function getUsuarioAnaliseProcesso()
    {
        return $this->container['usuario_analise_processo'];
    }

    /**
     * Sets usuario_analise_processo
     *
     * @param string|null $usuario_analise_processo usuario_analise_processo
     *
     * @return self
     */
    public function setUsuarioAnaliseProcesso($usuario_analise_processo)
    {
        if (is_null($usuario_analise_processo)) {
            throw new \InvalidArgumentException('non-nullable usuario_analise_processo cannot be null');
        }
        $this->container['usuario_analise_processo'] = $usuario_analise_processo;

        return $this;
    }

    /**
     * Gets status
     *
     * @return string|null
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param string|null $status status
     *
     * @return self
     */
    public function setStatus($status)
    {
        if (is_null($status)) {
            throw new \InvalidArgumentException('non-nullable status cannot be null');
        }
        $allowedValues = $this->getStatusAllowableValues();
        if (!in_array($status, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value '%s' for 'status', must be one of '%s'",
                    $status,
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets cnpj
     *
     * @return string|null
     */
    public function getCnpj()
    {
        return $this->container['cnpj'];
    }

    /**
     * Sets cnpj
     *
     * @param string|null $cnpj cnpj
     *
     * @return self
     */
    public function setCnpj($cnpj)
    {
        if (is_null($cnpj)) {
            throw new \InvalidArgumentException('non-nullable cnpj cannot be null');
        }
        $this->container['cnpj'] = $cnpj;

        return $this;
    }

    /**
     * Gets data_inclusao
     *
     * @return \DateTime|null
     */
    public function getDataInclusao()
    {
        return $this->container['data_inclusao'];
    }

    /**
     * Sets data_inclusao
     *
     * @param \DateTime|null $data_inclusao data_inclusao
     *
     * @return self
     */
    public function setDataInclusao($data_inclusao)
    {
        if (is_null($data_inclusao)) {
            throw new \InvalidArgumentException('non-nullable data_inclusao cannot be null');
        }
        $this->container['data_inclusao'] = $data_inclusao;

        return $this;
    }

    /**
     * Gets ano_credenciamento
     *
     * @return int|null
     */
    public function getAnoCredenciamento()
    {
        return $this->container['ano_credenciamento'];
    }

    /**
     * Sets ano_credenciamento
     *
     * @param int|null $ano_credenciamento ano_credenciamento
     *
     * @return self
     */
    public function setAnoCredenciamento($ano_credenciamento)
    {
        if (is_null($ano_credenciamento)) {
            throw new \InvalidArgumentException('non-nullable ano_credenciamento cannot be null');
        }
        $this->container['ano_credenciamento'] = $ano_credenciamento;

        return $this;
    }

    /**
     * Gets sequencial_credenciamento
     *
     * @return int|null
     */
    public function getSequencialCredenciamento()
    {
        return $this->container['sequencial_credenciamento'];
    }

    /**
     * Sets sequencial_credenciamento
     *
     * @param int|null $sequencial_credenciamento sequencial_credenciamento
     *
     * @return self
     */
    public function setSequencialCredenciamento($sequencial_credenciamento)
    {
        if (is_null($sequencial_credenciamento)) {
            throw new \InvalidArgumentException('non-nullable sequencial_credenciamento cannot be null');
        }
        $this->container['sequencial_credenciamento'] = $sequencial_credenciamento;

        return $this;
    }

    /**
     * Gets excluido
     *
     * @return bool|null
     */
    public function getExcluido()
    {
        return $this->container['excluido'];
    }

    /**
     * Sets excluido
     *
     * @param bool|null $excluido excluido
     *
     * @return self
     */
    public function setExcluido($excluido)
    {
        if (is_null($excluido)) {
            throw new \InvalidArgumentException('non-nullable excluido cannot be null');
        }
        $this->container['excluido'] = $excluido;

        return $this;
    }

    /**
     * Gets contrato
     *
     * @return bool|null
     */
    public function getContrato()
    {
        return $this->container['contrato'];
    }

    /**
     * Sets contrato
     *
     * @param bool|null $contrato contrato
     *
     * @return self
     */
    public function setContrato($contrato)
    {
        if (is_null($contrato)) {
            throw new \InvalidArgumentException('non-nullable contrato cannot be null');
        }
        $this->container['contrato'] = $contrato;

        return $this;
    }

    /**
     * Gets nome_razao_social
     *
     * @return string|null
     */
    public function getNomeRazaoSocial()
    {
        return $this->container['nome_razao_social'];
    }

    /**
     * Sets nome_razao_social
     *
     * @param string|null $nome_razao_social nome_razao_social
     *
     * @return self
     */
    public function setNomeRazaoSocial($nome_razao_social)
    {
        if (is_null($nome_razao_social)) {
            throw new \InvalidArgumentException('non-nullable nome_razao_social cannot be null');
        }
        $this->container['nome_razao_social'] = $nome_razao_social;

        return $this;
    }

    /**
     * Gets ata
     *
     * @return bool|null
     */
    public function getAta()
    {
        return $this->container['ata'];
    }

    /**
     * Sets ata
     *
     * @param bool|null $ata ata
     *
     * @return self
     */
    public function setAta($ata)
    {
        if (is_null($ata)) {
            throw new \InvalidArgumentException('non-nullable ata cannot be null');
        }
        $this->container['ata'] = $ata;

        return $this;
    }

    /**
     * Gets email
     *
     * @return string|null
     */
    public function getEmail()
    {
        return $this->container['email'];
    }

    /**
     * Sets email
     *
     * @param string|null $email email
     *
     * @return self
     */
    public function setEmail($email)
    {
        if (is_null($email)) {
            throw new \InvalidArgumentException('non-nullable email cannot be null');
        }
        $this->container['email'] = $email;

        return $this;
    }

    /**
     * Gets responsavel_cadastro_email
     *
     * @return string|null
     */
    public function getResponsavelCadastroEmail()
    {
        return $this->container['responsavel_cadastro_email'];
    }

    /**
     * Sets responsavel_cadastro_email
     *
     * @param string|null $responsavel_cadastro_email responsavel_cadastro_email
     *
     * @return self
     */
    public function setResponsavelCadastroEmail($responsavel_cadastro_email)
    {
        if (is_null($responsavel_cadastro_email)) {
            throw new \InvalidArgumentException('non-nullable responsavel_cadastro_email cannot be null');
        }
        $this->container['responsavel_cadastro_email'] = $responsavel_cadastro_email;

        return $this;
    }

    /**
     * Gets nome_sistema
     *
     * @return string|null
     */
    public function getNomeSistema()
    {
        return $this->container['nome_sistema'];
    }

    /**
     * Sets nome_sistema
     *
     * @param string|null $nome_sistema nome_sistema
     *
     * @return self
     */
    public function setNomeSistema($nome_sistema)
    {
        if (is_null($nome_sistema)) {
            throw new \InvalidArgumentException('non-nullable nome_sistema cannot be null');
        }
        $this->container['nome_sistema'] = $nome_sistema;

        return $this;
    }

    /**
     * Gets justificativa_analise
     *
     * @return string|null
     */
    public function getJustificativaAnalise()
    {
        return $this->container['justificativa_analise'];
    }

    /**
     * Sets justificativa_analise
     *
     * @param string|null $justificativa_analise justificativa_analise
     *
     * @return self
     */
    public function setJustificativaAnalise($justificativa_analise)
    {
        if (is_null($justificativa_analise)) {
            throw new \InvalidArgumentException('non-nullable justificativa_analise cannot be null');
        }
        $this->container['justificativa_analise'] = $justificativa_analise;

        return $this;
    }

    /**
     * Gets data_deferimento
     *
     * @return \DateTime|null
     */
    public function getDataDeferimento()
    {
        return $this->container['data_deferimento'];
    }

    /**
     * Sets data_deferimento
     *
     * @param \DateTime|null $data_deferimento data_deferimento
     *
     * @return self
     */
    public function setDataDeferimento($data_deferimento)
    {
        if (is_null($data_deferimento)) {
            throw new \InvalidArgumentException('non-nullable data_deferimento cannot be null');
        }
        $this->container['data_deferimento'] = $data_deferimento;

        return $this;
    }

    /**
     * Gets usuario_treinamento_id
     *
     * @return int|null
     */
    public function getUsuarioTreinamentoId()
    {
        return $this->container['usuario_treinamento_id'];
    }

    /**
     * Sets usuario_treinamento_id
     *
     * @param int|null $usuario_treinamento_id usuario_treinamento_id
     *
     * @return self
     */
    public function setUsuarioTreinamentoId($usuario_treinamento_id)
    {
        if (is_null($usuario_treinamento_id)) {
            throw new \InvalidArgumentException('non-nullable usuario_treinamento_id cannot be null');
        }
        $this->container['usuario_treinamento_id'] = $usuario_treinamento_id;

        return $this;
    }

    /**
     * Gets data_analise_processo
     *
     * @return \DateTime|null
     */
    public function getDataAnaliseProcesso()
    {
        return $this->container['data_analise_processo'];
    }

    /**
     * Sets data_analise_processo
     *
     * @param \DateTime|null $data_analise_processo data_analise_processo
     *
     * @return self
     */
    public function setDataAnaliseProcesso($data_analise_processo)
    {
        if (is_null($data_analise_processo)) {
            throw new \InvalidArgumentException('non-nullable data_analise_processo cannot be null');
        }
        $this->container['data_analise_processo'] = $data_analise_processo;

        return $this;
    }

    /**
     * Gets login_treinamento
     *
     * @return string|null
     */
    public function getLoginTreinamento()
    {
        return $this->container['login_treinamento'];
    }

    /**
     * Sets login_treinamento
     *
     * @param string|null $login_treinamento login_treinamento
     *
     * @return self
     */
    public function setLoginTreinamento($login_treinamento)
    {
        if (is_null($login_treinamento)) {
            throw new \InvalidArgumentException('non-nullable login_treinamento cannot be null');
        }
        $this->container['login_treinamento'] = $login_treinamento;

        return $this;
    }

    /**
     * Gets justificativa_deferimento
     *
     * @return string|null
     */
    public function getJustificativaDeferimento()
    {
        return $this->container['justificativa_deferimento'];
    }

    /**
     * Sets justificativa_deferimento
     *
     * @param string|null $justificativa_deferimento justificativa_deferimento
     *
     * @return self
     */
    public function setJustificativaDeferimento($justificativa_deferimento)
    {
        if (is_null($justificativa_deferimento)) {
            throw new \InvalidArgumentException('non-nullable justificativa_deferimento cannot be null');
        }
        $this->container['justificativa_deferimento'] = $justificativa_deferimento;

        return $this;
    }

    /**
     * Gets termos_declaracao_aceite
     *
     * @return bool|null
     */
    public function getTermosDeclaracaoAceite()
    {
        return $this->container['termos_declaracao_aceite'];
    }

    /**
     * Sets termos_declaracao_aceite
     *
     * @param bool|null $termos_declaracao_aceite termos_declaracao_aceite
     *
     * @return self
     */
    public function setTermosDeclaracaoAceite($termos_declaracao_aceite)
    {
        if (is_null($termos_declaracao_aceite)) {
            throw new \InvalidArgumentException('non-nullable termos_declaracao_aceite cannot be null');
        }
        $this->container['termos_declaracao_aceite'] = $termos_declaracao_aceite;

        return $this;
    }

    /**
     * Gets url_sistema
     *
     * @return string|null
     */
    public function getUrlSistema()
    {
        return $this->container['url_sistema'];
    }

    /**
     * Sets url_sistema
     *
     * @param string|null $url_sistema url_sistema
     *
     * @return self
     */
    public function setUrlSistema($url_sistema)
    {
        if (is_null($url_sistema)) {
            throw new \InvalidArgumentException('non-nullable url_sistema cannot be null');
        }
        $this->container['url_sistema'] = $url_sistema;

        return $this;
    }

    /**
     * Gets responsavel_cadastro_nome
     *
     * @return string|null
     */
    public function getResponsavelCadastroNome()
    {
        return $this->container['responsavel_cadastro_nome'];
    }

    /**
     * Sets responsavel_cadastro_nome
     *
     * @param string|null $responsavel_cadastro_nome responsavel_cadastro_nome
     *
     * @return self
     */
    public function setResponsavelCadastroNome($responsavel_cadastro_nome)
    {
        if (is_null($responsavel_cadastro_nome)) {
            throw new \InvalidArgumentException('non-nullable responsavel_cadastro_nome cannot be null');
        }
        $this->container['responsavel_cadastro_nome'] = $responsavel_cadastro_nome;

        return $this;
    }

    /**
     * Gets responsavel_cadastro_cpf
     *
     * @return string|null
     */
    public function getResponsavelCadastroCpf()
    {
        return $this->container['responsavel_cadastro_cpf'];
    }

    /**
     * Sets responsavel_cadastro_cpf
     *
     * @param string|null $responsavel_cadastro_cpf responsavel_cadastro_cpf
     *
     * @return self
     */
    public function setResponsavelCadastroCpf($responsavel_cadastro_cpf)
    {
        if (is_null($responsavel_cadastro_cpf)) {
            throw new \InvalidArgumentException('non-nullable responsavel_cadastro_cpf cannot be null');
        }
        $this->container['responsavel_cadastro_cpf'] = $responsavel_cadastro_cpf;

        return $this;
    }

    /**
     * Gets responsavel_cadastro_telefone
     *
     * @return string|null
     */
    public function getResponsavelCadastroTelefone()
    {
        return $this->container['responsavel_cadastro_telefone'];
    }

    /**
     * Sets responsavel_cadastro_telefone
     *
     * @param string|null $responsavel_cadastro_telefone responsavel_cadastro_telefone
     *
     * @return self
     */
    public function setResponsavelCadastroTelefone($responsavel_cadastro_telefone)
    {
        if (is_null($responsavel_cadastro_telefone)) {
            throw new \InvalidArgumentException('non-nullable responsavel_cadastro_telefone cannot be null');
        }
        $this->container['responsavel_cadastro_telefone'] = $responsavel_cadastro_telefone;

        return $this;
    }

    /**
     * Gets esfera_federal
     *
     * @return bool|null
     */
    public function getEsferaFederal()
    {
        return $this->container['esfera_federal'];
    }

    /**
     * Sets esfera_federal
     *
     * @param bool|null $esfera_federal esfera_federal
     *
     * @return self
     */
    public function setEsferaFederal($esfera_federal)
    {
        if (is_null($esfera_federal)) {
            throw new \InvalidArgumentException('non-nullable esfera_federal cannot be null');
        }
        $this->container['esfera_federal'] = $esfera_federal;

        return $this;
    }

    /**
     * Gets ufs
     *
     * @return string[]|null
     */
    public function getUfs()
    {
        return $this->container['ufs'];
    }

    /**
     * Sets ufs
     *
     * @param string[]|null $ufs ufs
     *
     * @return self
     */
    public function setUfs($ufs)
    {
        if (is_null($ufs)) {
            throw new \InvalidArgumentException('non-nullable ufs cannot be null');
        }
        $this->container['ufs'] = $ufs;

        return $this;
    }

    /**
     * Gets esfera_estadual
     *
     * @return bool|null
     */
    public function getEsferaEstadual()
    {
        return $this->container['esfera_estadual'];
    }

    /**
     * Sets esfera_estadual
     *
     * @param bool|null $esfera_estadual esfera_estadual
     *
     * @return self
     */
    public function setEsferaEstadual($esfera_estadual)
    {
        if (is_null($esfera_estadual)) {
            throw new \InvalidArgumentException('non-nullable esfera_estadual cannot be null');
        }
        $this->container['esfera_estadual'] = $esfera_estadual;

        return $this;
    }

    /**
     * Gets esfera_municipal
     *
     * @return bool|null
     */
    public function getEsferaMunicipal()
    {
        return $this->container['esfera_municipal'];
    }

    /**
     * Sets esfera_municipal
     *
     * @param bool|null $esfera_municipal esfera_municipal
     *
     * @return self
     */
    public function setEsferaMunicipal($esfera_municipal)
    {
        if (is_null($esfera_municipal)) {
            throw new \InvalidArgumentException('non-nullable esfera_municipal cannot be null');
        }
        $this->container['esfera_municipal'] = $esfera_municipal;

        return $this;
    }

    /**
     * Gets edital_credenciamento
     *
     * @return bool|null
     */
    public function getEditalCredenciamento()
    {
        return $this->container['edital_credenciamento'];
    }

    /**
     * Sets edital_credenciamento
     *
     * @param bool|null $edital_credenciamento edital_credenciamento
     *
     * @return self
     */
    public function setEditalCredenciamento($edital_credenciamento)
    {
        if (is_null($edital_credenciamento)) {
            throw new \InvalidArgumentException('non-nullable edital_credenciamento cannot be null');
        }
        $this->container['edital_credenciamento'] = $edital_credenciamento;

        return $this;
    }

    /**
     * Gets urledital_credenciamento
     *
     * @return string|null
     */
    public function getUrleditalCredenciamento()
    {
        return $this->container['urledital_credenciamento'];
    }

    /**
     * Sets urledital_credenciamento
     *
     * @param string|null $urledital_credenciamento urledital_credenciamento
     *
     * @return self
     */
    public function setUrleditalCredenciamento($urledital_credenciamento)
    {
        if (is_null($urledital_credenciamento)) {
            throw new \InvalidArgumentException('non-nullable urledital_credenciamento cannot be null');
        }
        $this->container['urledital_credenciamento'] = $urledital_credenciamento;

        return $this;
    }

    /**
     * Gets aviso_contratacao_direta
     *
     * @return bool|null
     */
    public function getAvisoContratacaoDireta()
    {
        return $this->container['aviso_contratacao_direta'];
    }

    /**
     * Sets aviso_contratacao_direta
     *
     * @param bool|null $aviso_contratacao_direta aviso_contratacao_direta
     *
     * @return self
     */
    public function setAvisoContratacaoDireta($aviso_contratacao_direta)
    {
        if (is_null($aviso_contratacao_direta)) {
            throw new \InvalidArgumentException('non-nullable aviso_contratacao_direta cannot be null');
        }
        $this->container['aviso_contratacao_direta'] = $aviso_contratacao_direta;

        return $this;
    }

    /**
     * Gets url_aviso_contratacao_direta
     *
     * @return string|null
     */
    public function getUrlAvisoContratacaoDireta()
    {
        return $this->container['url_aviso_contratacao_direta'];
    }

    /**
     * Sets url_aviso_contratacao_direta
     *
     * @param string|null $url_aviso_contratacao_direta url_aviso_contratacao_direta
     *
     * @return self
     */
    public function setUrlAvisoContratacaoDireta($url_aviso_contratacao_direta)
    {
        if (is_null($url_aviso_contratacao_direta)) {
            throw new \InvalidArgumentException('non-nullable url_aviso_contratacao_direta cannot be null');
        }
        $this->container['url_aviso_contratacao_direta'] = $url_aviso_contratacao_direta;

        return $this;
    }

    /**
     * Gets edital_licitacao
     *
     * @return bool|null
     */
    public function getEditalLicitacao()
    {
        return $this->container['edital_licitacao'];
    }

    /**
     * Sets edital_licitacao
     *
     * @param bool|null $edital_licitacao edital_licitacao
     *
     * @return self
     */
    public function setEditalLicitacao($edital_licitacao)
    {
        if (is_null($edital_licitacao)) {
            throw new \InvalidArgumentException('non-nullable edital_licitacao cannot be null');
        }
        $this->container['edital_licitacao'] = $edital_licitacao;

        return $this;
    }

    /**
     * Gets url_edital_licitacao
     *
     * @return string|null
     */
    public function getUrlEditalLicitacao()
    {
        return $this->container['url_edital_licitacao'];
    }

    /**
     * Sets url_edital_licitacao
     *
     * @param string|null $url_edital_licitacao url_edital_licitacao
     *
     * @return self
     */
    public function setUrlEditalLicitacao($url_edital_licitacao)
    {
        if (is_null($url_edital_licitacao)) {
            throw new \InvalidArgumentException('non-nullable url_edital_licitacao cannot be null');
        }
        $this->container['url_edital_licitacao'] = $url_edital_licitacao;

        return $this;
    }

    /**
     * Gets url_ata
     *
     * @return string|null
     */
    public function getUrlAta()
    {
        return $this->container['url_ata'];
    }

    /**
     * Sets url_ata
     *
     * @param string|null $url_ata url_ata
     *
     * @return self
     */
    public function setUrlAta($url_ata)
    {
        if (is_null($url_ata)) {
            throw new \InvalidArgumentException('non-nullable url_ata cannot be null');
        }
        $this->container['url_ata'] = $url_ata;

        return $this;
    }

    /**
     * Gets url_contrato
     *
     * @return string|null
     */
    public function getUrlContrato()
    {
        return $this->container['url_contrato'];
    }

    /**
     * Sets url_contrato
     *
     * @param string|null $url_contrato url_contrato
     *
     * @return self
     */
    public function setUrlContrato($url_contrato)
    {
        if (is_null($url_contrato)) {
            throw new \InvalidArgumentException('non-nullable url_contrato cannot be null');
        }
        $this->container['url_contrato'] = $url_contrato;

        return $this;
    }

    /**
     * Gets esfera_distrital
     *
     * @return bool|null
     */
    public function getEsferaDistrital()
    {
        return $this->container['esfera_distrital'];
    }

    /**
     * Sets esfera_distrital
     *
     * @param bool|null $esfera_distrital esfera_distrital
     *
     * @return self
     */
    public function setEsferaDistrital($esfera_distrital)
    {
        if (is_null($esfera_distrital)) {
            throw new \InvalidArgumentException('non-nullable esfera_distrital cannot be null');
        }
        $this->container['esfera_distrital'] = $esfera_distrital;

        return $this;
    }

    /**
     * Gets disponibiliza_artefato_licitacao
     *
     * @return bool|null
     */
    public function getDisponibilizaArtefatoLicitacao()
    {
        return $this->container['disponibiliza_artefato_licitacao'];
    }

    /**
     * Sets disponibiliza_artefato_licitacao
     *
     * @param bool|null $disponibiliza_artefato_licitacao disponibiliza_artefato_licitacao
     *
     * @return self
     */
    public function setDisponibilizaArtefatoLicitacao($disponibiliza_artefato_licitacao)
    {
        if (is_null($disponibiliza_artefato_licitacao)) {
            throw new \InvalidArgumentException('non-nullable disponibiliza_artefato_licitacao cannot be null');
        }
        $this->container['disponibiliza_artefato_licitacao'] = $disponibiliza_artefato_licitacao;

        return $this;
    }

    /**
     * Gets usuario_credenciado
     *
     * @return \OpenAPI\Client\Model\RecuperarCredenciamentoUsuarioDTO|null
     */
    public function getUsuarioCredenciado()
    {
        return $this->container['usuario_credenciado'];
    }

    /**
     * Sets usuario_credenciado
     *
     * @param \OpenAPI\Client\Model\RecuperarCredenciamentoUsuarioDTO|null $usuario_credenciado usuario_credenciado
     *
     * @return self
     */
    public function setUsuarioCredenciado($usuario_credenciado)
    {
        if (is_null($usuario_credenciado)) {
            throw new \InvalidArgumentException('non-nullable usuario_credenciado cannot be null');
        }
        $this->container['usuario_credenciado'] = $usuario_credenciado;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


