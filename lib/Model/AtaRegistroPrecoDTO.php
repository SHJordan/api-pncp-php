<?php
/**
 * AtaRegistroPrecoDTO
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * API PNCP
 *
 * API REST de serviços do Portal Nacional de Contratações Públicas (PNCP)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: css.serpro@serpro.gov.br
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.1.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * AtaRegistroPrecoDTO Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class AtaRegistroPrecoDTO implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'AtaRegistroPrecoDTO';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'numero_ata_registro_preco' => 'string',
        'ano_ata' => 'int',
        'data_assinatura' => '\DateTime',
        'data_vigencia_inicio' => '\DateTime',
        'data_vigencia_fim' => '\DateTime',
        'data_cancelamento' => '\DateTime',
        'cancelado' => 'bool',
        'data_publicacao_pncp' => '\DateTime',
        'data_inclusao' => '\DateTime',
        'data_atualizacao' => '\DateTime',
        'sequencial_ata' => 'int',
        'numero_controle_pncp' => 'string',
        'orgao_entidade' => '\OpenAPI\Client\Model\RecuperarOrgaoEntidadeDTO',
        'orgao_sub_rogado' => '\OpenAPI\Client\Model\RecuperarOrgaoEntidadeDTO',
        'unidade_orgao' => '\OpenAPI\Client\Model\RecuperarUnidadeOrgaoDTO',
        'unidade_sub_rogada' => '\OpenAPI\Client\Model\RecuperarUnidadeOrgaoDTO',
        'modalidade_nome' => 'string',
        'objeto_compra' => 'string',
        'informacao_complementar_compra' => 'string',
        'usuario_nome' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'numero_ata_registro_preco' => null,
        'ano_ata' => 'int32',
        'data_assinatura' => 'date',
        'data_vigencia_inicio' => 'date',
        'data_vigencia_fim' => 'date',
        'data_cancelamento' => 'date-time',
        'cancelado' => null,
        'data_publicacao_pncp' => 'date-time',
        'data_inclusao' => 'date-time',
        'data_atualizacao' => 'date-time',
        'sequencial_ata' => 'int32',
        'numero_controle_pncp' => null,
        'orgao_entidade' => null,
        'orgao_sub_rogado' => null,
        'unidade_orgao' => null,
        'unidade_sub_rogada' => null,
        'modalidade_nome' => null,
        'objeto_compra' => null,
        'informacao_complementar_compra' => null,
        'usuario_nome' => null
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var boolean[]
      */
    protected static array $openAPINullables = [
        'numero_ata_registro_preco' => false,
		'ano_ata' => false,
		'data_assinatura' => false,
		'data_vigencia_inicio' => false,
		'data_vigencia_fim' => false,
		'data_cancelamento' => false,
		'cancelado' => false,
		'data_publicacao_pncp' => false,
		'data_inclusao' => false,
		'data_atualizacao' => false,
		'sequencial_ata' => false,
		'numero_controle_pncp' => false,
		'orgao_entidade' => false,
		'orgao_sub_rogado' => false,
		'unidade_orgao' => false,
		'unidade_sub_rogada' => false,
		'modalidade_nome' => false,
		'objeto_compra' => false,
		'informacao_complementar_compra' => false,
		'usuario_nome' => false
    ];

    /**
      * If a nullable field gets set to null, insert it here
      *
      * @var boolean[]
      */
    protected array $openAPINullablesSetToNull = [];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of nullable properties
     *
     * @return array
     */
    protected static function openAPINullables(): array
    {
        return self::$openAPINullables;
    }

    /**
     * Array of nullable field names deliberately set to null
     *
     * @return boolean[]
     */
    private function getOpenAPINullablesSetToNull(): array
    {
        return $this->openAPINullablesSetToNull;
    }

    /**
     * Setter - Array of nullable field names deliberately set to null
     *
     * @param boolean[] $openAPINullablesSetToNull
     */
    private function setOpenAPINullablesSetToNull(array $openAPINullablesSetToNull): void
    {
        $this->openAPINullablesSetToNull = $openAPINullablesSetToNull;
    }

    /**
     * Checks if a property is nullable
     *
     * @param string $property
     * @return bool
     */
    public static function isNullable(string $property): bool
    {
        return self::openAPINullables()[$property] ?? false;
    }

    /**
     * Checks if a nullable property is set to null.
     *
     * @param string $property
     * @return bool
     */
    public function isNullableSetToNull(string $property): bool
    {
        return in_array($property, $this->getOpenAPINullablesSetToNull(), true);
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'numero_ata_registro_preco' => 'numeroAtaRegistroPreco',
        'ano_ata' => 'anoAta',
        'data_assinatura' => 'dataAssinatura',
        'data_vigencia_inicio' => 'dataVigenciaInicio',
        'data_vigencia_fim' => 'dataVigenciaFim',
        'data_cancelamento' => 'dataCancelamento',
        'cancelado' => 'cancelado',
        'data_publicacao_pncp' => 'dataPublicacaoPncp',
        'data_inclusao' => 'dataInclusao',
        'data_atualizacao' => 'dataAtualizacao',
        'sequencial_ata' => 'sequencialAta',
        'numero_controle_pncp' => 'numeroControlePNCP',
        'orgao_entidade' => 'orgaoEntidade',
        'orgao_sub_rogado' => 'orgaoSubRogado',
        'unidade_orgao' => 'unidadeOrgao',
        'unidade_sub_rogada' => 'unidadeSubRogada',
        'modalidade_nome' => 'modalidadeNome',
        'objeto_compra' => 'objetoCompra',
        'informacao_complementar_compra' => 'informacaoComplementarCompra',
        'usuario_nome' => 'usuarioNome'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'numero_ata_registro_preco' => 'setNumeroAtaRegistroPreco',
        'ano_ata' => 'setAnoAta',
        'data_assinatura' => 'setDataAssinatura',
        'data_vigencia_inicio' => 'setDataVigenciaInicio',
        'data_vigencia_fim' => 'setDataVigenciaFim',
        'data_cancelamento' => 'setDataCancelamento',
        'cancelado' => 'setCancelado',
        'data_publicacao_pncp' => 'setDataPublicacaoPncp',
        'data_inclusao' => 'setDataInclusao',
        'data_atualizacao' => 'setDataAtualizacao',
        'sequencial_ata' => 'setSequencialAta',
        'numero_controle_pncp' => 'setNumeroControlePncp',
        'orgao_entidade' => 'setOrgaoEntidade',
        'orgao_sub_rogado' => 'setOrgaoSubRogado',
        'unidade_orgao' => 'setUnidadeOrgao',
        'unidade_sub_rogada' => 'setUnidadeSubRogada',
        'modalidade_nome' => 'setModalidadeNome',
        'objeto_compra' => 'setObjetoCompra',
        'informacao_complementar_compra' => 'setInformacaoComplementarCompra',
        'usuario_nome' => 'setUsuarioNome'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'numero_ata_registro_preco' => 'getNumeroAtaRegistroPreco',
        'ano_ata' => 'getAnoAta',
        'data_assinatura' => 'getDataAssinatura',
        'data_vigencia_inicio' => 'getDataVigenciaInicio',
        'data_vigencia_fim' => 'getDataVigenciaFim',
        'data_cancelamento' => 'getDataCancelamento',
        'cancelado' => 'getCancelado',
        'data_publicacao_pncp' => 'getDataPublicacaoPncp',
        'data_inclusao' => 'getDataInclusao',
        'data_atualizacao' => 'getDataAtualizacao',
        'sequencial_ata' => 'getSequencialAta',
        'numero_controle_pncp' => 'getNumeroControlePncp',
        'orgao_entidade' => 'getOrgaoEntidade',
        'orgao_sub_rogado' => 'getOrgaoSubRogado',
        'unidade_orgao' => 'getUnidadeOrgao',
        'unidade_sub_rogada' => 'getUnidadeSubRogada',
        'modalidade_nome' => 'getModalidadeNome',
        'objeto_compra' => 'getObjetoCompra',
        'informacao_complementar_compra' => 'getInformacaoComplementarCompra',
        'usuario_nome' => 'getUsuarioNome'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->setIfExists('numero_ata_registro_preco', $data ?? [], null);
        $this->setIfExists('ano_ata', $data ?? [], null);
        $this->setIfExists('data_assinatura', $data ?? [], null);
        $this->setIfExists('data_vigencia_inicio', $data ?? [], null);
        $this->setIfExists('data_vigencia_fim', $data ?? [], null);
        $this->setIfExists('data_cancelamento', $data ?? [], null);
        $this->setIfExists('cancelado', $data ?? [], null);
        $this->setIfExists('data_publicacao_pncp', $data ?? [], null);
        $this->setIfExists('data_inclusao', $data ?? [], null);
        $this->setIfExists('data_atualizacao', $data ?? [], null);
        $this->setIfExists('sequencial_ata', $data ?? [], null);
        $this->setIfExists('numero_controle_pncp', $data ?? [], null);
        $this->setIfExists('orgao_entidade', $data ?? [], null);
        $this->setIfExists('orgao_sub_rogado', $data ?? [], null);
        $this->setIfExists('unidade_orgao', $data ?? [], null);
        $this->setIfExists('unidade_sub_rogada', $data ?? [], null);
        $this->setIfExists('modalidade_nome', $data ?? [], null);
        $this->setIfExists('objeto_compra', $data ?? [], null);
        $this->setIfExists('informacao_complementar_compra', $data ?? [], null);
        $this->setIfExists('usuario_nome', $data ?? [], null);
    }

    /**
    * Sets $this->container[$variableName] to the given data or to the given default Value; if $variableName
    * is nullable and its value is set to null in the $fields array, then mark it as "set to null" in the
    * $this->openAPINullablesSetToNull array
    *
    * @param string $variableName
    * @param array  $fields
    * @param mixed  $defaultValue
    */
    private function setIfExists(string $variableName, array $fields, $defaultValue): void
    {
        if (self::isNullable($variableName) && array_key_exists($variableName, $fields) && is_null($fields[$variableName])) {
            $this->openAPINullablesSetToNull[] = $variableName;
        }

        $this->container[$variableName] = $fields[$variableName] ?? $defaultValue;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets numero_ata_registro_preco
     *
     * @return string|null
     */
    public function getNumeroAtaRegistroPreco()
    {
        return $this->container['numero_ata_registro_preco'];
    }

    /**
     * Sets numero_ata_registro_preco
     *
     * @param string|null $numero_ata_registro_preco numero_ata_registro_preco
     *
     * @return self
     */
    public function setNumeroAtaRegistroPreco($numero_ata_registro_preco)
    {
        if (is_null($numero_ata_registro_preco)) {
            throw new \InvalidArgumentException('non-nullable numero_ata_registro_preco cannot be null');
        }
        $this->container['numero_ata_registro_preco'] = $numero_ata_registro_preco;

        return $this;
    }

    /**
     * Gets ano_ata
     *
     * @return int|null
     */
    public function getAnoAta()
    {
        return $this->container['ano_ata'];
    }

    /**
     * Sets ano_ata
     *
     * @param int|null $ano_ata ano_ata
     *
     * @return self
     */
    public function setAnoAta($ano_ata)
    {
        if (is_null($ano_ata)) {
            throw new \InvalidArgumentException('non-nullable ano_ata cannot be null');
        }
        $this->container['ano_ata'] = $ano_ata;

        return $this;
    }

    /**
     * Gets data_assinatura
     *
     * @return \DateTime|null
     */
    public function getDataAssinatura()
    {
        return $this->container['data_assinatura'];
    }

    /**
     * Sets data_assinatura
     *
     * @param \DateTime|null $data_assinatura data_assinatura
     *
     * @return self
     */
    public function setDataAssinatura($data_assinatura)
    {
        if (is_null($data_assinatura)) {
            throw new \InvalidArgumentException('non-nullable data_assinatura cannot be null');
        }
        $this->container['data_assinatura'] = $data_assinatura;

        return $this;
    }

    /**
     * Gets data_vigencia_inicio
     *
     * @return \DateTime|null
     */
    public function getDataVigenciaInicio()
    {
        return $this->container['data_vigencia_inicio'];
    }

    /**
     * Sets data_vigencia_inicio
     *
     * @param \DateTime|null $data_vigencia_inicio data_vigencia_inicio
     *
     * @return self
     */
    public function setDataVigenciaInicio($data_vigencia_inicio)
    {
        if (is_null($data_vigencia_inicio)) {
            throw new \InvalidArgumentException('non-nullable data_vigencia_inicio cannot be null');
        }
        $this->container['data_vigencia_inicio'] = $data_vigencia_inicio;

        return $this;
    }

    /**
     * Gets data_vigencia_fim
     *
     * @return \DateTime|null
     */
    public function getDataVigenciaFim()
    {
        return $this->container['data_vigencia_fim'];
    }

    /**
     * Sets data_vigencia_fim
     *
     * @param \DateTime|null $data_vigencia_fim data_vigencia_fim
     *
     * @return self
     */
    public function setDataVigenciaFim($data_vigencia_fim)
    {
        if (is_null($data_vigencia_fim)) {
            throw new \InvalidArgumentException('non-nullable data_vigencia_fim cannot be null');
        }
        $this->container['data_vigencia_fim'] = $data_vigencia_fim;

        return $this;
    }

    /**
     * Gets data_cancelamento
     *
     * @return \DateTime|null
     */
    public function getDataCancelamento()
    {
        return $this->container['data_cancelamento'];
    }

    /**
     * Sets data_cancelamento
     *
     * @param \DateTime|null $data_cancelamento data_cancelamento
     *
     * @return self
     */
    public function setDataCancelamento($data_cancelamento)
    {
        if (is_null($data_cancelamento)) {
            throw new \InvalidArgumentException('non-nullable data_cancelamento cannot be null');
        }
        $this->container['data_cancelamento'] = $data_cancelamento;

        return $this;
    }

    /**
     * Gets cancelado
     *
     * @return bool|null
     */
    public function getCancelado()
    {
        return $this->container['cancelado'];
    }

    /**
     * Sets cancelado
     *
     * @param bool|null $cancelado cancelado
     *
     * @return self
     */
    public function setCancelado($cancelado)
    {
        if (is_null($cancelado)) {
            throw new \InvalidArgumentException('non-nullable cancelado cannot be null');
        }
        $this->container['cancelado'] = $cancelado;

        return $this;
    }

    /**
     * Gets data_publicacao_pncp
     *
     * @return \DateTime|null
     */
    public function getDataPublicacaoPncp()
    {
        return $this->container['data_publicacao_pncp'];
    }

    /**
     * Sets data_publicacao_pncp
     *
     * @param \DateTime|null $data_publicacao_pncp data_publicacao_pncp
     *
     * @return self
     */
    public function setDataPublicacaoPncp($data_publicacao_pncp)
    {
        if (is_null($data_publicacao_pncp)) {
            throw new \InvalidArgumentException('non-nullable data_publicacao_pncp cannot be null');
        }
        $this->container['data_publicacao_pncp'] = $data_publicacao_pncp;

        return $this;
    }

    /**
     * Gets data_inclusao
     *
     * @return \DateTime|null
     */
    public function getDataInclusao()
    {
        return $this->container['data_inclusao'];
    }

    /**
     * Sets data_inclusao
     *
     * @param \DateTime|null $data_inclusao data_inclusao
     *
     * @return self
     */
    public function setDataInclusao($data_inclusao)
    {
        if (is_null($data_inclusao)) {
            throw new \InvalidArgumentException('non-nullable data_inclusao cannot be null');
        }
        $this->container['data_inclusao'] = $data_inclusao;

        return $this;
    }

    /**
     * Gets data_atualizacao
     *
     * @return \DateTime|null
     */
    public function getDataAtualizacao()
    {
        return $this->container['data_atualizacao'];
    }

    /**
     * Sets data_atualizacao
     *
     * @param \DateTime|null $data_atualizacao data_atualizacao
     *
     * @return self
     */
    public function setDataAtualizacao($data_atualizacao)
    {
        if (is_null($data_atualizacao)) {
            throw new \InvalidArgumentException('non-nullable data_atualizacao cannot be null');
        }
        $this->container['data_atualizacao'] = $data_atualizacao;

        return $this;
    }

    /**
     * Gets sequencial_ata
     *
     * @return int|null
     */
    public function getSequencialAta()
    {
        return $this->container['sequencial_ata'];
    }

    /**
     * Sets sequencial_ata
     *
     * @param int|null $sequencial_ata sequencial_ata
     *
     * @return self
     */
    public function setSequencialAta($sequencial_ata)
    {
        if (is_null($sequencial_ata)) {
            throw new \InvalidArgumentException('non-nullable sequencial_ata cannot be null');
        }
        $this->container['sequencial_ata'] = $sequencial_ata;

        return $this;
    }

    /**
     * Gets numero_controle_pncp
     *
     * @return string|null
     */
    public function getNumeroControlePncp()
    {
        return $this->container['numero_controle_pncp'];
    }

    /**
     * Sets numero_controle_pncp
     *
     * @param string|null $numero_controle_pncp numero_controle_pncp
     *
     * @return self
     */
    public function setNumeroControlePncp($numero_controle_pncp)
    {
        if (is_null($numero_controle_pncp)) {
            throw new \InvalidArgumentException('non-nullable numero_controle_pncp cannot be null');
        }
        $this->container['numero_controle_pncp'] = $numero_controle_pncp;

        return $this;
    }

    /**
     * Gets orgao_entidade
     *
     * @return \OpenAPI\Client\Model\RecuperarOrgaoEntidadeDTO|null
     */
    public function getOrgaoEntidade()
    {
        return $this->container['orgao_entidade'];
    }

    /**
     * Sets orgao_entidade
     *
     * @param \OpenAPI\Client\Model\RecuperarOrgaoEntidadeDTO|null $orgao_entidade orgao_entidade
     *
     * @return self
     */
    public function setOrgaoEntidade($orgao_entidade)
    {
        if (is_null($orgao_entidade)) {
            throw new \InvalidArgumentException('non-nullable orgao_entidade cannot be null');
        }
        $this->container['orgao_entidade'] = $orgao_entidade;

        return $this;
    }

    /**
     * Gets orgao_sub_rogado
     *
     * @return \OpenAPI\Client\Model\RecuperarOrgaoEntidadeDTO|null
     */
    public function getOrgaoSubRogado()
    {
        return $this->container['orgao_sub_rogado'];
    }

    /**
     * Sets orgao_sub_rogado
     *
     * @param \OpenAPI\Client\Model\RecuperarOrgaoEntidadeDTO|null $orgao_sub_rogado orgao_sub_rogado
     *
     * @return self
     */
    public function setOrgaoSubRogado($orgao_sub_rogado)
    {
        if (is_null($orgao_sub_rogado)) {
            throw new \InvalidArgumentException('non-nullable orgao_sub_rogado cannot be null');
        }
        $this->container['orgao_sub_rogado'] = $orgao_sub_rogado;

        return $this;
    }

    /**
     * Gets unidade_orgao
     *
     * @return \OpenAPI\Client\Model\RecuperarUnidadeOrgaoDTO|null
     */
    public function getUnidadeOrgao()
    {
        return $this->container['unidade_orgao'];
    }

    /**
     * Sets unidade_orgao
     *
     * @param \OpenAPI\Client\Model\RecuperarUnidadeOrgaoDTO|null $unidade_orgao unidade_orgao
     *
     * @return self
     */
    public function setUnidadeOrgao($unidade_orgao)
    {
        if (is_null($unidade_orgao)) {
            throw new \InvalidArgumentException('non-nullable unidade_orgao cannot be null');
        }
        $this->container['unidade_orgao'] = $unidade_orgao;

        return $this;
    }

    /**
     * Gets unidade_sub_rogada
     *
     * @return \OpenAPI\Client\Model\RecuperarUnidadeOrgaoDTO|null
     */
    public function getUnidadeSubRogada()
    {
        return $this->container['unidade_sub_rogada'];
    }

    /**
     * Sets unidade_sub_rogada
     *
     * @param \OpenAPI\Client\Model\RecuperarUnidadeOrgaoDTO|null $unidade_sub_rogada unidade_sub_rogada
     *
     * @return self
     */
    public function setUnidadeSubRogada($unidade_sub_rogada)
    {
        if (is_null($unidade_sub_rogada)) {
            throw new \InvalidArgumentException('non-nullable unidade_sub_rogada cannot be null');
        }
        $this->container['unidade_sub_rogada'] = $unidade_sub_rogada;

        return $this;
    }

    /**
     * Gets modalidade_nome
     *
     * @return string|null
     */
    public function getModalidadeNome()
    {
        return $this->container['modalidade_nome'];
    }

    /**
     * Sets modalidade_nome
     *
     * @param string|null $modalidade_nome modalidade_nome
     *
     * @return self
     */
    public function setModalidadeNome($modalidade_nome)
    {
        if (is_null($modalidade_nome)) {
            throw new \InvalidArgumentException('non-nullable modalidade_nome cannot be null');
        }
        $this->container['modalidade_nome'] = $modalidade_nome;

        return $this;
    }

    /**
     * Gets objeto_compra
     *
     * @return string|null
     */
    public function getObjetoCompra()
    {
        return $this->container['objeto_compra'];
    }

    /**
     * Sets objeto_compra
     *
     * @param string|null $objeto_compra objeto_compra
     *
     * @return self
     */
    public function setObjetoCompra($objeto_compra)
    {
        if (is_null($objeto_compra)) {
            throw new \InvalidArgumentException('non-nullable objeto_compra cannot be null');
        }
        $this->container['objeto_compra'] = $objeto_compra;

        return $this;
    }

    /**
     * Gets informacao_complementar_compra
     *
     * @return string|null
     */
    public function getInformacaoComplementarCompra()
    {
        return $this->container['informacao_complementar_compra'];
    }

    /**
     * Sets informacao_complementar_compra
     *
     * @param string|null $informacao_complementar_compra informacao_complementar_compra
     *
     * @return self
     */
    public function setInformacaoComplementarCompra($informacao_complementar_compra)
    {
        if (is_null($informacao_complementar_compra)) {
            throw new \InvalidArgumentException('non-nullable informacao_complementar_compra cannot be null');
        }
        $this->container['informacao_complementar_compra'] = $informacao_complementar_compra;

        return $this;
    }

    /**
     * Gets usuario_nome
     *
     * @return string|null
     */
    public function getUsuarioNome()
    {
        return $this->container['usuario_nome'];
    }

    /**
     * Sets usuario_nome
     *
     * @param string|null $usuario_nome usuario_nome
     *
     * @return self
     */
    public function setUsuarioNome($usuario_nome)
    {
        if (is_null($usuario_nome)) {
            throw new \InvalidArgumentException('non-nullable usuario_nome cannot be null');
        }
        $this->container['usuario_nome'] = $usuario_nome;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


